# Hosting settings: address and port to listen on
HOST=localhost
PORT=3001

# Logging to stderr, filtered by log level
# "silent" | "fatal" | "error" | "warn" | "info" | "debug" | "trace"
# https://github.com/pinojs/pino/blob/main/docs/api.md#level-1
LOG_LEVEL=info
TEST_LOG_LEVEL=silent

# Set this when running in production, and unset it otherwise
# https://nodejs.org/en/learn/getting-started/nodejs-the-difference-between-development-and-production
#NODE_ENV=production

# Database Settings
# https://node-postgres.com/features/connecting
# https://www.postgresql.org/docs/current/libpq-envars.html
PGHOST=${PGHOST}
PGPORT=${PGPORT}
PGUSER=${PGUSER}
PGPASSWORD=${PGPASSWORD}
PGDATABASE=${PGDATABASE}

# `AUTH_SERVER_ISSUER` serves two purposes related to authentication via JSON Web Tokens (JWTs):
# 1. The "issuer" of a Bearer JWT in the Authorization header needs to match this value.
# 2. The public key of the JWT issuer is found via
#    `${AUTH_SERVER_ISSUER}/protocol/openid-connect/certs` to check that the JWT was signed by the
#    expected authority, namely the realm of the authorization server.
# To run integration tests, the URL can be completely fabricated, for example
# 'https://made-up-auth-server/realms/fake' would work for testing.
# Set `AUTH_SERVER_ISSUER` to the URL of your keycloak realm. This works in dev, test, and prod.
# Specifically, this is the "realm" URL in Keycloak terminology.
AUTH_SERVER_ISSUER=${AUTH_SERVER_ISSUER}

# The `OPENAPI_DOCS_AUTH_CLIENT_ID` needs to match a client registered in the authorization server.
# This will be used to pre-fill the `clientId` visible when opening the Authorization dialog box in
# the OpenAPI documentation web site. OpenAPI was formerly called Swagger.
# This is the "Client ID" field in Keycloak.
OPENAPI_DOCS_AUTH_CLIENT_ID=${OPENAPI_DOCS_AUTH_CLIENT_ID}

# S3 Credentials
# For more information on populating these please see
# https://docs.digitalocean.com/products/spaces/reference/s3-sdk-examples/
S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
S3_ACCESS_SECRET=${S3_ACCESS_SECRET}
S3_BUCKET=${S3_BUCKET}
# Note that the S3 endpoint does not include the bucket.
S3_ENDPOINT=${S3_ENDPOINT}
S3_PATH_STYLE=${S3_PATH_STYLE} # `true` or `false`
S3_REGION=${S3_REGION}

# Disable redoc telemetry
# https://redocly.com/docs/realm/setup/reference/telemetry#opt-out
REDOCLY_TELEMETRY=off
